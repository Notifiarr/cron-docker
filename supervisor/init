#!/usr/bin/env dash

# Custom Dockerfile init script for custom cron/supervisor container.
# Makes folders, copies files, sets UID/GID, applies time zone, starts supervisor.

# If the /config directory is mounted, make sure it has a log directory.
[ ! -d "/config" ] || mkdir -p /config/log /config/supervisor /config/cron

# Copy crontab files into container as root-owned.
rm -f /etc/cron.d/* 2>/dev/null
[ ! -d "/config/cron" ] || cp --no-preserve all -u /config/cron/* /etc/cron.d/

# Update abc user with provided PUID and PGID.
[ -z "$PUID" ] || /usr/sbin/usermod -o -u $PUID abc >/dev/null 2>&1
[ -z "$PGID" ] || /usr/sbin/groupmod -o -g $PGID abc >/dev/null 2>&1

# Set a default PORT if one is not provided.
[ -n "$SUPERVISOR_PORT" ] || export SUPERVISOR_PORT=9911

# These need to be set so supervisor doesn't complain.
# Pass values in from Docker if you'd like.
# Password should begin with {SHA} and be SHA1 encoded.
[ -n "$SUPERVISOR_USER" ] || export SUPERVISOR_USER=""
[ -n "$SUPERVISOR_PASS" ] || export SUPERVISOR_PASS=""

# Update the provided time zone in the global environment file.
# This allows cron to pass the time zone to apps it runs.
if [ -n "$TZ" ]; then
  /usr/bin/sed -i'' /etc/environment -e "s#^TZ=.*#TZ=$TZ#g"
  echo "$TZ" > /etc/timezone
  [ ! -f /usr/share/zoneinfo/$TZ ] || ln -sf /usr/share/zoneinfo/$TZ /etc/localtime
fi

# Start supervisor, which starts cron any other workers.
exec /usr/bin/supervisord -c /etc/supervisor/supervisord.conf
